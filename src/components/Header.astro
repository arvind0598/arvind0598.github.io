---
import config from "../config.ts";
import * as content from "../content/header.md";
import HeaderLink from "./HeaderLink.astro";

const headerLinkClasses =
  "motion-safe:hover:rotate-12 motion-safe:hover:scale-105 p-2";
---

<header
  role="banner"
  class="flex flex-col items-center justify-between p-8 text-center font-sans"
>
  <h1 class="text-6xl">{content.frontmatter.title}</h1>
  <h2 class="text-3xl font-light text-stone-700 dark:text-stone-300">
    {content.frontmatter.subtitle}
  </h2>
</header>
<nav
  role="navigation"
  aria-label="Social media links and site options"
  class="mb-8 flex items-center justify-center space-x-4 text-xl"
>
  <!-- <HeaderLink href="/"> home </HeaderLink> -->
  <!-- <HeaderLink href="/posts">posts</HeaderLink> -->
  <!-- <HeaderLink href="/">etc</HeaderLink> -->
  <HeaderLink
    href={config.linkedinLink}
    class={headerLinkClasses}
    target="_blank"
    aria-label="Connect with me on LinkedIn (opens in new tab)"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      role="img"
      aria-hidden="true"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M8 11v5"></path>
      <path d="M8 8v.01"></path><path d="M12 16v-5"></path>
      <path d="M16 16v-3a2 2 0 1 0 -4 0"></path>
      <path
        d="M3 7a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4z"
      ></path>
    </svg>
  </HeaderLink>
  <HeaderLink
    href={config.email}
    class="p-2 motion-safe:hover:scale-105 motion-safe:hover:rotate-12"
    aria-label="Send me an email"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      role="img"
      aria-hidden="true"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path
        d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z"
      ></path>
      <path d="M3 7l9 6l9 -6"></path>
    </svg>
  </HeaderLink>
  <HeaderLink
    href={config.resumeLink}
    class={headerLinkClasses}
    target="_blank"
    aria-label="Download my resume (PDF opens in new tab)"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon icon-tabler icons-tabler-outline icon-tabler-file-cv"
      role="img"
      aria-hidden="true"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M14 3v4a1 1 0 0 0 1 1h4"></path>
      <path
        d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"
      ></path>
      <path d="M11 12.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0"></path>
      <path d="M13 11l1.5 6l1.5 -6"></path>
    </svg>
  </HeaderLink>
  <div role="group" aria-label="Theme selection">
    <button
      type="button"
      class="block cursor-pointer rounded-full bg-stone-200 text-stone-800 hover:bg-stone-300 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:outline-none motion-safe:transition-all motion-safe:duration-100 dark:hidden"
      id="dark-mode-button"
      aria-label="Switch to dark theme"
      aria-pressed="false"
    >
      <span
        class="group inline-flex size-9 shrink-0 items-center justify-center"
      >
        <svg
          class="size-4 shrink-0"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          role="img"
          aria-hidden="true"
        >
          <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
        </svg>
      </span>
    </button>
    <button
      type="button"
      class="hidden cursor-pointer rounded-full bg-stone-200 text-stone-800 hover:bg-stone-300 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:outline-none motion-safe:transition-all motion-safe:duration-100 dark:block"
      id="light-mode-button"
      aria-label="Switch to light theme"
      aria-pressed="false"
    >
      <span
        class="group inline-flex size-9 shrink-0 items-center justify-center"
      >
        <svg
          class="size-4 shrink-0"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          role="img"
          aria-hidden="true"
        >
          <circle cx="12" cy="12" r="4"></circle>
          <path d="M12 2v2"></path>
          <path d="M12 20v2"></path>
          <path d="m4.93 4.93 1.41 1.41"></path>
          <path d="m17.66 17.66 1.41 1.41"></path>
          <path d="M2 12h2"></path>
          <path d="M20 12h2"></path>
          <path d="m6.34 17.66-1.41 1.41"></path>
          <path d="m19.07 4.93-1.41 1.41"></path>
        </svg>
      </span>
    </button>
  </div>
</nav>

<script>
  const html = document.documentElement;

  const setColorScheme = (isDark: boolean) => {
    const darkModeButton = document.getElementById("dark-mode-button");
    const lightModeButton = document.getElementById("light-mode-button");

    if (isDark) {
      html.classList.add("dark");
      localStorage.setItem("hs_theme", "dark");
      if (darkModeButton) darkModeButton.setAttribute("aria-pressed", "true");
      if (lightModeButton)
        lightModeButton.setAttribute("aria-pressed", "false");
    } else {
      html.classList.remove("dark");
      localStorage.setItem("hs_theme", "light");
      if (darkModeButton) darkModeButton.setAttribute("aria-pressed", "false");
      if (lightModeButton) lightModeButton.setAttribute("aria-pressed", "true");
    }
  };

  // Initialize proper ARIA states on page load
  const initializeThemeState = () => {
    const isDark = html.classList.contains("dark");
    const darkModeButton = document.getElementById("dark-mode-button");
    const lightModeButton = document.getElementById("light-mode-button");

    if (isDark) {
      if (darkModeButton) darkModeButton.setAttribute("aria-pressed", "true");
      if (lightModeButton)
        lightModeButton.setAttribute("aria-pressed", "false");
    } else {
      if (darkModeButton) darkModeButton.setAttribute("aria-pressed", "false");
      if (lightModeButton) lightModeButton.setAttribute("aria-pressed", "true");
    }
  };

  const darkModeButton = document.getElementById("dark-mode-button");
  if (darkModeButton) {
    darkModeButton.addEventListener("click", () => {
      setColorScheme(true);
    });
  }

  const lightModeButton = document.getElementById("light-mode-button");
  if (lightModeButton) {
    lightModeButton.addEventListener("click", () => {
      setColorScheme(false);
    });
  }

  // Initialize theme state when page loads
  initializeThemeState();
</script>
